&НаСервере
// Токены для авторизации
&НаСервере
Перем ТаблицаТокенов;

&НаСервере
Процедура ПриСозданииОбъекта()
	
	ТаблицаТокенов = Новый ТаблицаЗначений;
	ТаблицаТокенов.Колонки.Добавить("Токен", Новый ОписаниеТипов("Строка"));
	ТаблицаТокенов.Колонки.Добавить("Пользователь", Новый ОписаниеТипов("Строка"));
	ТаблицаТокенов.Колонки.Добавить("СрокДействия", Новый ОписаниеТипов("Дата"));
	
КонецПроцедуры

&НаСервере
// Аутентификация пользователя
&НаСервере
Функция АутентифицироватьПользователя(Логин, Пароль)
	
	// Поиск пользователя
	Для Каждого Строка Из ТаблицаПользователей Цикл
		Если Строка.Логин = Логин И Строка.Пароль = ХешироватьПароль(Пароль) Тогда
			// Создание токена
			Токен = СоздатьТокен(Строка.Идентификатор);
			Возврат Токен;
		КонецЕсли;
	КонецЦикла;
	
	// Пользователь не найден
	Возврат Неопределено;
	
КонецФункции

&НаСервере
// Проверка авторизации
&НаСервере
Функция ПроверитьАвторизацию(Токен)
	
	Для Каждого Строка Из ТаблицаТокенов Цикл
		Если Строка.Токен = Токен И Строка.СрокДействия > ТекущаяДата() Тогда
			Возврат Строка.Пользователь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
// Создание токена
&НаСервере
Функция СоздатьТокен(ИдентификаторПользователя)
	
	Токен = УникальныйИдентификатор();
	
	НоваяСтрока = ТаблицаТокенов.Добавить();
	НоваяСтрока.Токен = Токен;
	НоваяСтрока.Пользователь = ИдентификаторПользователя;
	НоваяСтрока.СрокДействия = ТекущаяДата() + 24 * 60 * 60; // Токен действует 24 часа
	
	Возврат Токен;
	
КонецФункции

&НаСервере
// Удаление токена
&НаСервере
Процедура УдалитьТокен(Токен)
	
	Для Каждого Строка Из ТаблицаТокенов Цикл
		Если Строка.Токен = Токен Тогда
			ТаблицаТокенов.Удалить(Строка);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры 