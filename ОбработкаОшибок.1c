&НаСервере
// Обработка ошибок
&НаСервере
Функция ОбработатьОшибку(Ошибка)
	
	ЗаписатьВЖурналРегистрации("Ошибка", УровеньЖурналаРегистрации.Ошибка, , , 
		СтрШаблон("Ошибка: %1. Описание: %2", Ошибка.ПодробноеОписаниеОшибки, Ошибка.ОписаниеОшибки));
	
	Результат = Новый Структура;
	Результат.Вставить("Результат", Ложь);
	Результат.Вставить("Сообщение", "Произошла ошибка при обработке запроса");
	
	Возврат Результат;
	
КонецФункции

&НаСервере
// Логирование
&НаСервере
Процедура ЗаписатьВЖурналРегистрации(Источник, Уровень, Пользователь = Неопределено, Компьютер = Неопределено, Комментарий = "")
	
	ЗаписьЖурналаРегистрации = ЖурналРегистрации.Запись();
	ЗаписьЖурналаРегистрации.Источник = Источник;
	ЗаписьЖурналаРегистрации.Уровень = Уровень;
	ЗаписьЖурналаРегистрации.Пользователь = Пользователь;
	ЗаписьЖурналаРегистрации.Компьютер = Компьютер;
	ЗаписьЖурналаРегистрации.Комментарий = Комментарий;
	ЗаписьЖурналаРегистрации.Записать();
	
КонецПроцедуры

&НаСервере
// Обработка HTTP-ошибок
&НаСервере
Процедура УстановитьОшибкуHTTP(Ответ, КодОшибки, Сообщение)
	
	Ответ.УстановитьТипСодержимого("application/json");
	Ответ.КодСостояния = КодОшибки;
	
	Результат = Новый Структура;
	Результат.Вставить("Ошибка", Истина);
	Результат.Вставить("Код", КодОшибки);
	Результат.Вставить("Сообщение", Сообщение);
	
	Ответ.Записать(Результат);
	
КонецПроцедуры

&НаСервере
// Проверка авторизации
&НаСервере
Функция ПроверитьАвторизациюЗапроса(Запрос)
	
	Токен = Запрос.Заголовки.Получить("Authorization");
	Если Токен = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Удаляем префикс "Bearer "
	Токен = СреднийСимвол(Токен, 8);
	
	Возврат ПроверитьАвторизацию(Токен);
	
КонецФункции 